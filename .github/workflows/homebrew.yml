# Start Homebrew Releaser when a new GitHub release of the CLI package is published
name: Release Homebrew Tap

on:
  release:
    types: [published]

jobs:
  homebrew-releaser:
    runs-on: ubuntu-latest
    name: homebrew-releaser
    steps:
      - name: Add published release to Homebrew Tap
        uses: Justintime50/homebrew-releaser@v1
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          # Required - strings
          # TODO change
          homebrew_owner: alexrashed
          homebrew_tap: homebrew-tap

          # Logs debugging info to console.
          # Default is shown - boolean
          # TODO change
          debug: true

          # The name of the folder in your homebrew tap where formula will be committed to.
          # Default is shown - string
          formula_folder: Formula

          # The Personal Access Token (saved as a repo secret) that has `repo` permissions for the repo running the action AND Homebrew tap you want to release to.
          # Required - string
          github_token: ${{ secrets.LOCALSTACK_GITHUB_TOKEN }}


          # Git author info used to commit to the homebrew tap.
          # Defaults are shown - strings
          commit_owner: localstack-bot
          commit_email: 88328844+localstack-bot@users.noreply.github.com

          # Custom install command for your formula.
          # Required - string
          install: |
            libexec.install Dir["*"]
                bin.install_symlink libexec/"localstack"

          # Custom test command for your formula so you can run `brew test`.
          # Optional - string
          test: |
            assert_match /LocalStack Command Line Interface/, shell_output("#{bin}/localstack --help", 0)

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional - booleans
          # target_darwin_amd64: true
          # target_darwin_arm64: true
          # target_linux_amd64: true
          # TODO activate once linux-arm-build is activated
          target_linux_arm64: false