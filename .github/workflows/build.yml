name: Build / Release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: macos-11
            os: darwin
            arch: amd64
          - runner: windows-2019
            os: windows
            arch: amd64
          - runner: ubuntu-20.04
            os: linux
            arch: amd64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtual environment
        run: make venv

      - name: Build using pyinstaller
        shell: bash
        run: make clean all

      - name: Setup Docker on MacOS
        if: matrix.os == 'darwin'
        run: |
          brew install docker
          colima start

      - name: Non-Docker Smoke tests
        shell: bash
        run: |
          ls dist-bin/
          cd dist-bin
          # show the help
          ./localstack --help
          # show the config
          ./localstack config show

      - name: Docker Smoke tests (Linux, Darwin)
        shell: bash
        # GitHub Windows runner cannot run Docker containers (https://github.com/orgs/community/discussions/25491)
        if: matrix.os != 'windows'
        run: |
          # Pull images to avoid making smoke tests vulnerable to system behavior (docker pull speed)
          docker pull localstack/localstack
          docker pull localstack/localstack-pro
          cd dist-bin
          # start community
          ./localstack start -d
          ./localstack wait -t 60
          ./localstack status services --format plain
          ./localstack status services --format plain | grep "s3=available"
          ./localstack stop
          # start pro
          LOCALSTACK_API_KEY=${{ secrets.TEST_LOCALSTACK_API_KEY }} ./localstack start -d
          ./localstack wait -t 60
          ./localstack status services --format plain
          ./localstack status services --format plain | grep "xray=available"
          ./localstack stop

      - name: Set CLI version output
        id: cli_version
        shell: bash
        run: |
          dist-bin/localstack --version
          echo "number=$(dist-bin/localstack --version)" >> $GITHUB_OUTPUT

      - name: Archive binary distribution
        shell: bash
        run: |
          cd dist-bin/
          # use wildcard - localstack* - for windows (.exe file extension)
          tar -czf localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz localstack*
          rm localstack

      - name: Archive folder distribution
        shell: bash
        run: |
          cd dist-dir/
          tar -czf localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}-dir.tar.gz localstack
          rm -r localstack

      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}
          path: 'dist-bin/*'

      - name: Upload folder artifacts
        uses: actions/upload-artifact@v3
        with:
          name: localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}-dir
          path: 'dist-dir/*'

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    permissions:
      contents: write
    steps:
      - name: Download Builds
        uses: actions/download-artifact@v3
        with:
          path: builds
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: 'builds/**/*'
          draft: true