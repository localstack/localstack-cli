name: Build with pyinstaller

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: macos-11
            os: darwin
            arch: amd64
          - runner: windows-2019
            os: windows
            arch: amd64
          - runner: ubuntu-20.04
            os: linux
            arch: amd64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Create virtual environment
        run: make venv

      - name: Build using pyinstaller
        run: make build

      - name: Smoke tests
        run: |
          ls dist/
          dist/localstack --help
          dist/localstack config show

      # TODO Add more tests here

      - name: Set CLI version output
        id: cli_version
        shell: bash
        run: |
          dist/localstack --version
          echo "number=$(dist/localstack --version)" >> $GITHUB_OUTPUT

      - name: Archive distribution (Linux/MacOS)
        if: matrix.os != 'windows'
        run: |
          cd dist/
          tar -czf localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz localstack
          rm localstack

      - name: Archive distribution (Windows)
        if: matrix.os == 'windows'
        run: |
          cd dist/
          Compress-Archive localstack.exe localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}.zip
          rm localstack.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: localstack-cli_${{steps.cli_version.outputs.number}}_${{ matrix.os }}_${{ matrix.arch }}
          path: 'dist/*'

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    steps:
      - name: Download Builds
        uses: actions/download-artifact@v3
        with:
          path: builds
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: 'builds/*'